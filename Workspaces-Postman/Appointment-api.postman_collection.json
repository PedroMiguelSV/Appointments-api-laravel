{
	"info": {
		"_postman_id": "c6d91c01-b721-4d01-90be-92d9cb600473",
		"name": "Appointment-api",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38653207"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const token = response.token;\r",
									"const expiresIn = response.expires_in;\r",
									"\r",
									"const expiresAt = Date.now() + expiresIn * 1000 - 60000;\r",
									"\r",
									"pm.environment.set(\"token\", token);\r",
									"pm.environment.set(\"expires_at\", expiresAt);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"Admin@example.com\",\r\n  \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expiresAt = pm.environment.get(\"expires_at\");\r",
									"\r",
									"if (Date.now() > expiresAt - 900000) {\r",
									"    pm.sendRequest({\r",
									"        url: 'http://localhost:8000/api/refresh',\r",
									"        method: 'POST',\r",
									"        header: {\r",
									"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"        if (err || !res) {\r",
									"            console.error(\"Error al refrescar el token:\", err);\r",
									"            pm.environment.unset(\"token\");\r",
									"            pm.environment.unset(\"expires_at\");\r",
									"        } else {\r",
									"            const newToken = res.json().token;\r",
									"            const newExpiresIn = res.json().expires_in;\r",
									"\r",
									"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
									"            pm.environment.set(\"token\", newToken);\r",
									"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
									"        }\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"example\",\n  \"email\": \"example@example.com\",\n  \"password\": \"password\",\n  \"password_confirmation\": \"password\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "me",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expiresAt = pm.environment.get(\"expires_at\");\r",
									"\r",
									"if (Date.now() > expiresAt - 900000) {\r",
									"    pm.sendRequest({\r",
									"        url: 'http://localhost:8000/api/refresh',\r",
									"        method: 'POST',\r",
									"        header: {\r",
									"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"        if (err || !res) {\r",
									"            console.error(\"Error al refrescar el token:\", err);\r",
									"            pm.environment.unset(\"token\");\r",
									"            pm.environment.unset(\"expires_at\");\r",
									"        } else {\r",
									"            const newToken = res.json().token;\r",
									"            const newExpiresIn = res.json().expires_in;\r",
									"\r",
									"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
									"            pm.environment.set(\"token\", newToken);\r",
									"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
									"        }\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"if (response.token && response.expires_in) {\r",
									"    pm.environment.set(\"token\", response.token);\r",
									"\r",
									"    const newExpiresAt = Date.now() + response.expires_in * 1000 - 60000;\r",
									"    pm.environment.set(\"expires_at\", newExpiresAt);\r",
									"} else {\r",
									"    console.error(\"No se recibiÃ³ un token de refresco.\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "index",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expiresAt = pm.environment.get(\"expires_at\");\r",
									"\r",
									"if (Date.now() > expiresAt - 900000) {\r",
									"    pm.sendRequest({\r",
									"        url: 'http://localhost:8000/api/refresh',\r",
									"        method: 'POST',\r",
									"        header: {\r",
									"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"        if (err || !res) {\r",
									"            console.error(\"Error al refrescar el token:\", err);\r",
									"            pm.environment.unset(\"token\");\r",
									"            pm.environment.unset(\"expires_at\");\r",
									"        } else {\r",
									"            const newToken = res.json().token;\r",
									"            const newExpiresIn = res.json().expires_in;\r",
									"\r",
									"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
									"            pm.environment.set(\"token\", newToken);\r",
									"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "destroy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const expiresAt = pm.environment.get(\"expires_at\");\r",
									"\r",
									"if (Date.now() > expiresAt - 900000) {\r",
									"    pm.sendRequest({\r",
									"        url: 'http://localhost:8000/api/refresh',\r",
									"        method: 'POST',\r",
									"        header: {\r",
									"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"        if (err || !res) {\r",
									"            console.error(\"Error al refrescar el token:\", err);\r",
									"            pm.environment.unset(\"token\");\r",
									"            pm.environment.unset(\"expires_at\");\r",
									"        } else {\r",
									"            const newToken = res.json().token;\r",
									"            const newExpiresIn = res.json().expires_in;\r",
									"\r",
									"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
									"            pm.environment.set(\"token\", newToken);\r",
									"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
									"        }\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/users/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"token\");\r",
									"pm.environment.unset(\"expires_at\");\r",
									"\r",
									"console.log(\"Variables de sesiÃ³n eliminadas.\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/api/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Crud",
			"item": [
				{
					"name": "Client",
					"item": [
						{
							"name": "index",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/clients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Jorge Juan Fernandez\",\n  \"email\": \"Fernandez_41@example.com\",\n  \"phone\": \"658965248\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/clients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"phone\": \"689652354\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/clients/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"clients",
										"6"
									]
								}
							},
							"response": []
						},
						{
							"name": "destroy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/clients/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"clients",
										"6"
									]
								}
							},
							"response": []
						},
						{
							"name": "search",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"name\": \"Jorge\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/clients/search",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"clients",
										"search"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Services",
					"item": [
						{
							"name": "index",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/services",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"services"
									]
								}
							},
							"response": []
						},
						{
							"name": "store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"limpieza piel\",\n    \"duration\": 25,\n    \"precio\": 14\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/services",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"services"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"duration\": 25\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/services/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"services",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "destroy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8000/api/services/5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"services",
										"5"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Appointment",
					"item": [
						{
							"name": "index",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8000/api/appointments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"appointments"
									]
								}
							},
							"response": []
						},
						{
							"name": "store",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": 5,          \n    \"note\": \"seÃ±ora maja\", \n    \"date\": \"2024-11-28\", \n    \"time\": \"12:30\",\n    \"services\": [1]\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/appointments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"appointments"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Consultaa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/api/appointments/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"appointments",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "destroy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8000/api/appointments/5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"appointments",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "index/view",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expiresAt = pm.environment.get(\"expires_at\");\r",
											"\r",
											"if (Date.now() > expiresAt - 900000) {\r",
											"    pm.sendRequest({\r",
											"        url: 'http://localhost:8000/api/refresh',\r",
											"        method: 'POST',\r",
											"        header: {\r",
											"            'Authorization': `Bearer ${pm.environment.get(\"token\")}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err || !res) {\r",
											"            console.error(\"Error al refrescar el token:\", err);\r",
											"            pm.environment.unset(\"token\");\r",
											"            pm.environment.unset(\"expires_at\");\r",
											"        } else {\r",
											"            const newToken = res.json().token;\r",
											"            const newExpiresIn = res.json().expires_in;\r",
											"\r",
											"            const newExpiresAt = Date.now() + newExpiresIn * 1000 - 900000; \r",
											"            pm.environment.set(\"token\", newToken);\r",
											"            pm.environment.set(\"expires_at\", newExpiresAt);\r",
											"        }\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:8000/api/appointments/view",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"appointments",
										"view"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}